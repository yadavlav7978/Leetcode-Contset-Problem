class Solution {
public:
    
//     int string_to_decimal(string s){
        
//         int val=0;
//         int p=0;
        
//         for(int i=0;i<s.length();i++){
            
//             val+=((s[i]-'0')*pow(2,p));
//             p++;
//         }
        
//         return val;
        
//     }
    
    
    vector<vector<int>> substringXorQueries(string s, vector<vector<int>>& q) {
        
          
         map<int,pair<int,int>>mp;
        
        for(int i=0;i<s.length();i++){
            
            if(s[i]=='0'){
                mp[0]={i,i};
                break;
            }
        }
        
        
        for(int i=0;i<s.length();i++){
            
            if(s[i]=='1'){
                
                string t;
                
                for(int j=i;j<min(i+31,(int)s.length());j++){
                    
                    t+=s[j];  
                    
                    long long val=stoll(t,0,2);
                    
                    if(mp.find(val)==mp.end()){
                        mp[val]={i,j};
                    }
                }
            }
        }
        
    vector<vector<int>>ans;
        
        for(int i=0;i<q.size();i++){
            
            int key=q[i][0]^q[i][1];
            
            if(mp.find(key)!=mp.end()){
                
                ans.push_back({mp[key].first,mp[key].second});
                
            }else{
                ans.push_back({-1,-1});
            }
            
        }
        
        return ans;
            
    }
};
