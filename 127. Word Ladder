class Solution {
public:
    int ladderLength(string st, string end, vector<string>& word) {
        
        unordered_map<string ,int>mp;

        for(auto it:word){
            mp[it]++;
        }

        queue<pair<string,int>>q;
        q.push({st,1});

    while(!q.empty()){

        for(int k=0;k<q.size();k++){

            string x=q.front().first;
            int level=q.front().second;
            q.pop();

            if(x==end){
                return level;
            }

            mp.erase(x); //most important observation

            for(int i=0;i<x.length();i++){
                char c=x[i];

                for(int j=0;j<26;j++){
                    x[i]='a'+j;

                    if(mp.find(x)!=mp.end()){
                        q.push({x,level+1});
                    }
                }
                x[i]=c;
            }
           }
        }

        return 0;
    }
};
