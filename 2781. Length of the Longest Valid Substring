class Solution {
public:
    int longestValidSubstring(string word, vector<string>& forbidden) {

        unordered_set<string>st;

        for(auto it: forbidden){
            st.insert(it);
        }

        int n=word.length();
        int left=0;
        int ans=0;

        for(int right=0;right<n;right++){

            string temp="";

            for(int j=right;j>=max(left,(right-10));j--){
                temp=word[j]+temp;

                if(st.find(temp)!=st.end()){
                    left=j+1;
                    break;
                }
            }

            ans=max(ans,(right-left+1));

        }

        return ans;
        
    }
};
